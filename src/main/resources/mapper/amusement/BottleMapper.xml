<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rainchain.jasmine.mapper.amusement.BottleMapper">
    <insert id="throwBottle" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO bottle(type, qq, nick, `group`, groupName, content, anonymous, timeStamp)
        VALUES (#{type}, #{qq}, #{nick}, #{group}, #{groupName}, #{content}, #{anonymous},
                #{timeStamp})
    </insert>
    <insert id="comment">
        INSERT INTO bottle_reply (bottleId, qq, nick, content, anonymous, timeStamp)
        VALUES (#{bottleId}, #{qq}, #{nick}, #{content}, #{anonymous}, #{timeStamp})
    </insert>
    <insert id="thumbs">
        INSERT INTO bottle_thumbs(qq, id, thumbsUp, timeStamp)
        VALUES (#{qq}, #{id}, #{thumbsUp}, #{timeStamp})
        ON DUPLICATE KEY UPDATE thumbsUp = #{thumbsUp}
    </insert>
    <insert id="collect">
        REPLACE INTO bottle_favorites(qq, id, timeStamp)
        VALUES (#{qq}, #{id}, #{timeStamp})
    </insert>
    <delete id="deleteBottle">
        DELETE bottle,bottle_reply,bottle_thumbs,bottle_favorites
        FROM bottle LEFT JOIN bottle_reply ON bottle.id = bottle_reply.bottleId
        LEFT JOIN bottle_thumbs ON bottle.id = bottle_thumbs.id
        LEFT JOIN bottle_favorites ON bottle.id = bottle_favorites.id
        <where>
            bottle.id = #{id} AND (
            bottle.qq = #{qq} OR #{qq} in
            <foreach collection="admin" item="admin" open="(" close=")" separator=",">
                #{admin}
            </foreach>
            )
        </where>
    </delete>
    <delete id="deleteComment">
        DELETE bottle_reply
        FROM bottle_reply
        WHERE bottle_reply.bottleId = #{id}
          AND bottle_reply.qq = #{qq}
    </delete>
    <delete id="deleteCollect">
        DELETE bottle_favorites
        FROM bottle_favorites
        WHERE bottle_favorites.id = #{id}
          AND bottle_favorites.qq = #{qq}
    </delete>
    <delete id="deleteBottleOnly">
        DELETE bottle
        FROM bottle
        WHERE bottle.id = #{id}
    </delete>
    <delete id="clearBottle">
        DELETE bottle,bottle_reply,bottle_thumbs,bottle_favorites
        FROM bottle
                 LEFT JOIN bottle_reply ON bottle.id = bottle_reply.bottleId
                 LEFT JOIN bottle_thumbs ON bottle.id = bottle_thumbs.id
                 LEFT JOIN bottle_favorites ON bottle.id = bottle_favorites.id
        WHERE (SELECT COUNT(*) FROM bottle_thumbs WHERE id = bottle.id AND thumbsUp = 0) - 2 -
              (SELECT COUNT(*) FROM bottle_thumbs WHERE id = bottle.id AND thumbsUp = 1) * 2 > 0
    </delete>
    <select id="pickBottle" resultType="com.rainchain.jasmine.entity.Bottle">
        SELECT *
        FROM bottle
        LIMIT ${offset}, 1;
    </select>
    <select id="getReply" resultType="com.rainchain.jasmine.entity.BottleReply">
        SELECT *
        FROM bottle_reply
        WHERE bottleId = #{bottleId};
    </select>
    <select id="getThumbs" resultType="java.lang.String">
        SELECT CONCAT(IFNULL((SELECT COUNT(*) FROM bottle_thumbs WHERE id = #{id} AND thumbsUp = 1), '0'),
                      ',',
                      IFNULL((SELECT COUNT(*) FROM bottle_thumbs WHERE id = #{id} AND thumbsUp = 0), '0'))
    </select>
    <select id="pickBottleById" resultType="com.rainchain.jasmine.entity.Bottle">
        SELECT *
        FROM bottle
        WHERE id = #{id}
        LIMIT 1;
    </select>
    <select id="searchBottleByQq" resultType="com.rainchain.jasmine.component.SearchBottleResult">
        SELECT id, content
        FROM bottle
        WHERE qq = #{qq}
          AND type = 1
    </select>
    <select id="searchBottleByReply" resultType="com.rainchain.jasmine.component.SearchBottleResult">
        SELECT id, content
        FROM bottle
        WHERE id IN (SELECT bottleId FROM bottle_reply WHERE qq = #{qq})
    </select>
    <select id="searchBottleByCollect" resultType="com.rainchain.jasmine.component.SearchBottleResult">
        SELECT id, content
        FROM bottle
        WHERE id IN (SELECT id FROM bottle_favorites WHERE qq = #{qq})
    </select>
    <select id="searchByKeywords" resultType="com.rainchain.jasmine.component.SearchBottleResult">
        SELECT id, content
        FROM bottle
        <where>
            <foreach collection="keywords" item="keyword" separator="AND">
                content LIKE CONCAT('%', #{keyword}, '%')
            </foreach>
        </where>
        LIMIT 100;
    </select>
    <select id="getOffset" resultType="java.lang.Integer">
        SELECT FLOOR(RAND() * COUNT(*))
        FROM bottle
    </select>
    <select id="getNum" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM bottle
    </select>
</mapper>